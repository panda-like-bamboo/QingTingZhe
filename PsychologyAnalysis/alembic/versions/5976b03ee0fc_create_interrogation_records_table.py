"""Create interrogation_records table

Revision ID: 5976b03ee0fc
Revises: 269625ee49fe
Create Date: 2025-05-08 18:39:41.402219

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5976b03ee0fc'
down_revision: Union[str, None] = '269625ee49fe'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interrogation_records',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('interrogator_id', sa.Integer(), nullable=False),
    sa.Column('basic_info', sa.JSON(), nullable=True),
    sa.Column('qas', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('full_text', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['interrogator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interrogation_records_id'), 'interrogation_records', ['id'], unique=False)
    op.create_index(op.f('ix_interrogation_records_interrogator_id'), 'interrogation_records', ['interrogator_id'], unique=False)
    op.create_index(op.f('ix_interrogation_records_status'), 'interrogation_records', ['status'], unique=False)
    op.drop_table('questionnaire_questions')
    op.alter_column('analysis_data', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('analysis_data', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('analysis_data', 'criminal_record',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_index(op.f('ix_analysis_data_submitter_id'), 'analysis_data', ['submitter_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_analysis_data_submitter_id'), table_name='analysis_data')
    op.alter_column('analysis_data', 'criminal_record',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analysis_data', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.alter_column('analysis_data', 'created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
    op.create_table('questionnaire_questions',
    sa.Column('id', sa.INTEGER(), nullable=True),
    sa.Column('questionnaire_type', sa.TEXT(), nullable=False),
    sa.Column('question_number', sa.INTEGER(), nullable=False),
    sa.Column('question_text', sa.TEXT(), nullable=False),
    sa.Column('options', sa.TEXT(), nullable=False),
    sa.Column('scale_name', sa.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('questionnaire_type', 'question_number')
    )
    op.drop_index(op.f('ix_interrogation_records_status'), table_name='interrogation_records')
    op.drop_index(op.f('ix_interrogation_records_interrogator_id'), table_name='interrogation_records')
    op.drop_index(op.f('ix_interrogation_records_id'), table_name='interrogation_records')
    op.drop_table('interrogation_records')
    # ### end Alembic commands ###
