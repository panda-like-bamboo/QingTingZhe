"""Add attributes and assessment_attributes tables

Revision ID: a43553c2237e
Revises: 5976b03ee0fc
Create Date: 2025-05-08 19:19:08.492623

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a43553c2237e'
down_revision: Union[str, None] = '5976b03ee0fc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attributes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('attributes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attributes_category'), ['category'], unique=False)
        batch_op.create_index(batch_op.f('ix_attributes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_attributes_name'), ['name'], unique=True)

    op.create_table('assessment_attributes',
    sa.Column('assessment_id', sa.Integer(), nullable=False),
    sa.Column('attribute_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['analysis_data.id'], ),
    sa.ForeignKeyConstraint(['attribute_id'], ['attributes.id'], ),
    sa.PrimaryKeyConstraint('assessment_id', 'attribute_id')
    )
    with op.batch_alter_table('analysis_data', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('criminal_record',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_analysis_data_submitter_id'), ['submitter_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('analysis_data', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_analysis_data_submitter_id'))
        batch_op.alter_column('criminal_record',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('updated_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))
        batch_op.alter_column('created_at',
               existing_type=sa.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('(CURRENT_TIMESTAMP)'))

    op.drop_table('assessment_attributes')
    with op.batch_alter_table('attributes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attributes_name'))
        batch_op.drop_index(batch_op.f('ix_attributes_id'))
        batch_op.drop_index(batch_op.f('ix_attributes_category'))

    op.drop_table('attributes')
    # ### end Alembic commands ###
